openapi: 3.0.0
info:
  title: Obstacle API
  version: 1.0.0
paths:
  /obstacles:
    get:
      summary: Get all obstacles
      responses:
        "200":
          description: List of obstacles
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListObstacleResponse"
        default:
          description: Error Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create an obstacle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateObstacleRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Obstacle"
        default:
          description: Error Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /obstacles/{id}:
    get:
      summary: Get an obstacle by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obstacle found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Obstacle"
        default:
          description: Error Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update an obstacle
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateObstacleRequest"
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Obstacle"
        default:
          description: Error Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete an obstacle
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
        default:
          description: Error Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Error:
      type: object
      properties:
        status_code:
          type: integer
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
        - status_code
        - message
    ObstacleType:
      type: integer
      enum: [0, 1, 2, 3, 4, 5]
      description: |
        Enum representing different types of obstacles:
        * 0 - BLOCK_WALL
        * 1 - VENDING_MACHINE
        * 2 - STAIRS
        * 3 - STEEP_SLOPES
        * 4 - NARROW_ROADS
        * 5 - OTHER
    DangerLevel:
      type: integer
      enum: [0, 1, 2]
      description: |
        Enum representing different danger levels:
        * 0 - LOW
        * 1 - MEDIUM
        * 2 - HIGH
    Obstacle:
      type: object
      properties:
        id:
          type: integer
        position:
          type: array
          items:
            type: number
          description: "[latitude, longitude]"
          minItems: 2
          maxItems: 2
        type:
          $ref: "#/components/schemas/ObstacleType"
        description:
          type: string
        dangerLevel:
          $ref: "#/components/schemas/DangerLevel"
        nodes:
          type: array
          items:
            type: number
          description: "[latitude, longitude]"
          minItems: 2
          maxItems: 2
        nearestDistance:
          type: number
        noNearbyRoad:
          type: boolean
        createdAt:
          type: string
          format: date-time
      required:
        - position
        - type
        - description
        - dangerLevel
        - createdAt
    CreateObstacleRequest:
      type: object
      properties:
        position:
          type: array
          items:
            type: number
          description: "[latitude, longitude]"
          minItems: 2
          maxItems: 2
        type:
          $ref: "#/components/schemas/ObstacleType"
        description:
          type: string
        dangerLevel:
          $ref: "#/components/schemas/DangerLevel"
        nodes:
          type: array
          items:
            type: number
          description: "[latitude, longitude]"
          minItems: 2
          maxItems: 2
        nearestDistance:
          type: number
        noNearbyRoad:
          type: boolean
      required:
        - position
        - type
        - dangerLevel
    UpdateObstacleRequest:
      type: object
      properties:
        position:
          type: array
          items:
            type: number
          description: "[latitude, longitude]"
          minItems: 2
          maxItems: 2
        type:
          $ref: "#/components/schemas/ObstacleType"
        description:
          type: string
        dangerLevel:
          $ref: "#/components/schemas/DangerLevel"
        nodes:
          type: array
          items:
            type: number
          description: "[latitude, longitude]"
          minItems: 2
          maxItems: 2
        nearestDistance:
          type: number
        noNearbyRoad:
          type: boolean
      required:
        - position
        - type
        - dangerLevel
    ListObstacleResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Obstacle"
    Empty:
      type: object
